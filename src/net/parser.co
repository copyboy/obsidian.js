Stream = require \stream .Stream
BufferedStream = require "./bufferedStream"
ReadError = require "./readError"
Packet    = require "./packet"

module.exports = class Parser extends Stream
  
  (@type) ->
    @writable = true
    @stream = new BufferedStream!
  
  write: !(data) ->
    if !@writable then return
    @stream.write data
    while @writable && @stream.bytesLeft
      offset = @stream.offset
      try
        packet = Packet.read @type, @stream
      catch error
        if error instanceof RangeError
          @stream.offset = offset
        else if error instanceof ReadError
          @emit \error, error
          @destroy!
        else throw error
        break
      @emit \packet, packet
  
  end: !->
    @destroy!
  
  destroy: !->
    if !@writable then return
    @writable = false
    @stream.destroy!
    @stream = null
